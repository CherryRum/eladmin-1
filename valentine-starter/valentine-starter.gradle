plugins {
    id 'org.springframework.boot' // 通过引入这个，使该subModule有了相关的Task
    alias(libs.plugins.kotlin.jvm)
    alias(libs.plugins.kotlin.spring)
    alias(libs.plugins.kotlin.jpa)
    alias(libs.plugins.kotlin.lombok)
    // Apply GraalVM Native Image plugin
//    id 'org.graalvm.buildtools.native' version '0.9.21'
}

ext {
    kotlinEnable = true
}

dependencies {
    implementation project(':unicorn-security')
    implementation project(':unicorn-logging')
    implementation project(':unicorn-tp-tools-kotlin')
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    if (kotlinEnable) {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation libs.bundles.coroutines
        implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
        testImplementation 'org.jetbrains.kotlin:kotlin-test'
    }
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation(project(':unicorn-security')) {
        capabilities {
            requireCapability('com.lwohvye:unicorn-security-captcha')
        }
    }
    implementation(project(':unicorn-security')) {
        capabilities {
            // 这里只支撑横线，不支持驼峰
            requireCapability('com.lwohvye:unicorn-security-business-log')
        }
    }
}
tasks.withType(Test).configureEach {
    useJUnitPlatform()
    jvmArgs += "--enable-preview"
    jvmArgs += "--add-modules=jdk.incubator.concurrent" // for unnamed module
}

tasks.named("bootRun") {
    jvmArgs += "-XX:+UseZGC"
    jvmArgs += "--enable-preview"
    jvmArgs += "--add-modules=jdk.incubator.concurrent" // for unnamed module
}

tasks.named("bootBuildImage") {
    environment = [
            "BP_JVM_VERSION"              : "20",
            "BPE_DELIM_JAVA_TOOL_OPTIONS" : " ",
            "BPE_APPEND_JAVA_TOOL_OPTIONS": "-XX:+UseZGC --enable-preview"
    ]
}

if (kotlinEnable) {
    kotlin {
        sourceSets.configureEach {
            languageSettings {
//                languageVersion = "2.0" // kotlin.experimental.tryK2=true
                apiVersion = "2.0"
            }
        }
        jvmToolchain(20)
    }
}
