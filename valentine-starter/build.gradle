plugins {
    id 'com.lwohvye.java-conventions'
    id 'org.gradlex.extra-java-module-info'
    id 'org.springframework.boot' // 通过引入这个，使该subModule有了相关的Task
}

dependencies {
    implementation project(':unicorn-security')
    implementation project(':unicorn-logging')
    implementation project(':unicorn-tp-tools')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnlyApi "org.projectlombok:lombok:${lombokVersion}"
    compileOnlyApi "org.mapstruct:mapstruct-processor:$mapstructVersion"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation(project(':unicorn-security')) {
        capabilities {
            requireCapability('com.lwohvye:unicorn-security-captcha')
        }
    }
    implementation(project(':unicorn-security')) {
        capabilities {
            // 这里只支撑横线，不支持驼峰
            requireCapability('com.lwohvye:unicorn-security-business-log')
        }
    }
}

extraJavaModuleInfo {
    automaticModule("bizlog-sdk-${bizlogVersion}.jar", 'com.mzt.logapi')
    automaticModule("easy-captcha-${easyCaptchaVersion}.jar", 'com.wf.captcha')
    automaticModule("ganymed-ssh2-262.jar", 'ch.ethz.ssh2')
    automaticModule("hutool-all-${hutoolVersion}.jar", 'cn.hutool')
    automaticModule("jjwt-api-${jjwtVersion}.jar", 'io.jsonwebtoken.api')
    automaticModule("jjwt-impl-${jjwtVersion}.jar", 'io.jsonwebtoken.impl')
    automaticModule("jjwt-jackson-${jjwtVersion}.jar", 'io.jsonwebtoken.jackson')
    automaticModule("jsch-0.1.55.jar", 'com.jcraft.jsch')
    automaticModule("mapstruct-spring-extensions-${mapstructSpringVersion}.jar", 'org.mapstruct.extensions.spring')
    automaticModule("quartz-${quartzVersion}.jar", 'org.quartz')
    automaticModule("redisson-${redissonVersion}.jar", 'org.redisson')
    automaticModule("spring-retry-${springretryVersion}.jar", 'spring.retry')
    automaticModule("thumbnailator-${thumbnailatorVersion}.jar", 'net.coobird.thumbnailator')
    module('jakarta.mail-1.0.0.jar', 'jakarta.mail', '1.0.0') {
        uses('jakarta.mail.util.StreamProvider')
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named("bootBuildImage") {
    environment = [
            "BP_JVM_VERSION"              : "19",
            "BPE_DELIM_JAVA_TOOL_OPTIONS" : " ",
            "BPE_APPEND_JAVA_TOOL_OPTIONS": "-XX:+UseZGC --enable-preview"
    ]
}
