要生成 JKS（Java KeyStore）格式和 PEM（Privacy Enhanced Mail）格式的证书，并将其添加到 TrustStore（信任库），可以按照以下步骤进行操作：

生成自签名证书：
1. 使用 OpenSSL 工具生成私钥（private key）和证书签名请求（certificate signing request）文件：
   ```
   openssl genpkey -algorithm RSA -out private.key
   openssl req -new -key private.key -out csr.csr
   ```
2. 使用私钥和证书签名请求生成自签名证书（self-signed certificate）：
   ```
   openssl x509 -req -in csr.csr -signkey private.key -out certificate.crt
   ```

生成 JKS 格式的证书：
1. 将私钥和证书导出为 PKCS12 格式（.p12 或 .pfx 文件）：
   ```
   openssl pkcs12 -export -in certificate.crt -inkey private.key -out certificate.p12
   ```
2. 将 PKCS12 文件转换为 JKS 格式：(skip)
   ```
   keytool -importkeystore -srckeystore certificate.p12 -srcstoretype PKCS12 -destkeystore certificate.jks -deststoretype JKS
   ```

生成 PEM 格式的证书：
1. 将私钥和证书合并到一个 PEM 文件中：(skip)
   ```
   cat private.key certificate.crt > certificate.pem
   ```

将证书添加到 TrustStore：
1. 创建一个空的 TrustStore 文件：
   ```
   keytool -genkey -keyalg RSA -alias mytruststore -keystore truststore.jks
   ```
   正在为以下对象生成 3,072 位RSA密钥对和自签名证书 (SHA384withRSA) (有效期为 90 天):
            CN=lWoHvYe, OU=WHY, O=WHY, L=CN, ST=SH, C=Unknown

2. 将 PEM 格式的证书导入到 TrustStore：(use certificate.crt)
   ```
   keytool -importcert -file certificate.pem -alias mycert -keystore truststore.jks
   ```

3. 将 Java Keystore (.jks) 文件转换为 PKCS12 (.p12) 格式的 Truststore。可以使用以下命令执行此操作：

    ```
    keytool -importkeystore -srckeystore truststore.jks -destkeystore truststore.p12 -deststoretype PKCS12
    ```
 在此命令中，truststore.jks 是先前生成的 Java Keystore 文件的名称，truststore.p12 是要生成的 PKCS12 Truststore 文件的名称。你可以根据需要调整文件名。


请注意，上述步骤中使用的命令可能因操作系统或所使用的工具版本而有所不同。确保根据自己的环境和需求进行相应调整。

这些步骤只提供了生成和导入证书的基本过程，具体操作可能会因使用的工具和配置而有所差异。在实际应用中，可能还需要考虑其他安全性和证书管理的方面。建议在使用任何证书时遵循最佳实践，并仔细阅读相关文档和工具的使用说明。
