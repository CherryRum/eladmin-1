/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'com.lwohvye.java-conventions'
    id 'extra-java-module-info'
    id 'signing'
}

description = '日志收集模块'

java {
    withJavadocJar()
}

jar {
    enabled = true // separates boot jar from normal jar
    manifest {
        from sharedManifest
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Automatic-Module-Name": "lwohvye." + project.name.replace("-", ".")
        )
    }
    into("META-INF/maven/$project.group/$project.name") {
        from { generatePomFileForMavenPublication }
        rename ".*", "pom.xml"
    }
}

publishing {
    publications {
        mavenJavaLog(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv('OSSRH_USERNAME') ?: ossrhUsername
                password = System.getenv('OSSRH_PASSWORD') ?: ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJavaLog
}

dependencies {
    api project(':unicorn-core')
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}

extraJavaModuleInfo {
    automaticModule("hutool-all-${hutoolVersion}.jar", 'cn.hutool')
    automaticModule("mapstruct-spring-extensions-${mapstructSpringVersion}.jar", 'org.mapstruct.extensions.spring')
    automaticModule("redisson-${redissonVersion}.jar", 'org.redisson')
    automaticModule("thumbnailator-${thumbnailatorVersion}.jar", 'net.coobird.thumbnailator')
}
