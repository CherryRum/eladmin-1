/*
 * This file was generated by the Gradle 'init' task.
 */
import org.springframework.boot.gradle.plugin.SpringBootPlugin

//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}

description = '系统核心模块'

java {
    withJavadocJar()
    // 这个要放到dependencies之前
    registerFeature('log4jdbc') {
        usingSourceSet(sourceSets.main)
    }
}

jar {
    enabled = true // separates boot jar from normal jar
    manifest {
        from sharedManifest
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Automatic-Module-Name": "lwohvye." + project.name.replace("-", ".")
        )
    }
    into("META-INF/maven/$project.group/$project.name") {
        from { generatePomFileForMavenJavaCorePublication }
        rename ".*", "pom.xml"
    }
}

publishing {
    publications {
        mavenJavaCore(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Unicorn Core'
                description = 'Common module with BaseConfig, Utils, QueryAnno and so on'
                url = 'https://github.com/WHY-lWoHvYe/valentine-p2p.git'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'lWoHvYe'
                        name = '王红岩(lWoHvYe)'
                        email = 'lWoHvYe@outlook.com'
                        url = 'https://www.lwohvye.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/WHY-lWoHvYe/valentine-p2p.git'
                    developerConnection = 'scm:git:ssh://github.com/WHY-lWoHvYe/valentine-p2p.git'
                    url = 'https://github.com/WHY-lWoHvYe/valentine-p2p/tree/main'
                }
            }
        }
    }
}

dependencies {
    api platform(SpringBootPlugin.BOM_COORDINATES)
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-security'
    api 'org.springframework.boot:spring-boot-starter-amqp'
    api 'org.springframework.boot:spring-boot-starter-cache'
    api 'org.springframework.boot:spring-boot-starter-data-redis'
    api 'org.springframework.boot:spring-boot-configuration-processor'
    api "org.redisson:redisson-spring-boot-starter:$redissonVersion"
    api 'org.apache.commons:commons-pool2'
    api 'org.apache.commons:commons-lang3'
    api "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocVersion"
    api "cn.hutool:hutool-all:$hutoolVersion"
    api "net.dreamlu:mica-ip2region:$ip2regionVersion"
    api "org.apache.poi:poi:$poiVersion"
    api "org.apache.poi:poi-ooxml:$poiVersion"
    implementation "xerces:xercesImpl:$xercesVersion"
    api "org.mapstruct:mapstruct:$mapstructVersion"
//    mapstruct-spring-extensions seems unused
    api "org.mapstruct.extensions.spring:mapstruct-spring-annotations:${mapstructSpringExtensionsVersion}"
    api 'org.hibernate.validator:hibernate-validator'
    api "nl.basjes.parse.useragent:yauaa:$yauaaVersion"
    api 'com.github.ben-manes.caffeine:caffeine'
    implementation "net.logstash.logback:logstash-logback-encoder:$logstashVersion"
    api "net.coobird:thumbnailator:$thumbnailatorVersion"
    api 'org.jetbrains:annotations:24.0.0'
    api 'io.vavr:vavr:0.10.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.mysql:mysql-connector-j'
    log4jdbcRuntimeOnly "com.lwohvye.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:$log4jdbcVersion"
}

tasks.named('compileJava') {
    options.javaModuleVersion = provider { project.version }
}

